@using Gronia.Timereg.Application
@using Gronia.Timereg.FileManager
@using Microsoft.Extensions.Logging
@using System.Text.Json
@using System.IO

@inject IStringLocalizer<DataImportExport> Localizer
@inject ILogger<DataImportExport> Logger
@inject ITimeRegistrationRepository TimeRegistrationRepo
@inject IDataMigrator DataMigrator

<div class="py-4">
    <h2 class="text-2xl">@Localizer["Data Export"]</h2>
    <label>@Localizer["Upload file to import"]</label><br />
    <InputFile class="mt-4" OnChange="@OnInputFileChange"></InputFile>
    <br/>
    <DownloadButton 
        DataFactory="@GetData"
        FileName="@GetFileName()"
        MimeType="application/json"
        class="px-4 lg:w-1/3 w-full shadow bg-gray-600 hover:bg-gray-400  focus:shadow-outline focus:outline-none font-bold py-2 px-4 rounded mt-4 lg:mr-2">
        @Localizer["Download data from database"]
    </DownloadButton>

        @if(_importFile is not null)
        {
            <button type="submit"
                @onclick="@ImportData"
                class="px-4 lg:w-1/3 w-full shadow bg-gray-600 hover:bg-gray-400  focus:shadow-outline focus:outline-none font-bold py-2 px-4 rounded mt-4 mb-2 lg:ml-2">
                @Localizer["Import data"]
            </button>

            @if (_importFinished == false)
            {
                <p>@Localizer["Importing data"]</p>
            }
            else if (_importFinished == true)
            {
                <p>@Localizer["Finished importing data"]</p>
            }
        }

</div>

@code {

    private IBrowserFile? _importFile;

    private bool? _importFinished;

    protected async Task<Stream> GetData()
    {
        Logger.LogInformation("Downloading data");

        return await DataMigrator.ExportData();
    }

    protected async Task ImportData()
    {
        if(_importFile is null)
        {
            Logger.LogWarning("Missing file");
            return;
        }
        _importFinished = false;
        await DataMigrator.ImportFromFile(_importFile.OpenReadStream());
        _importFinished = true;
    }

    protected void OnInputFileChange(InputFileChangeEventArgs e)
    {
        _importFinished = null;
        _importFile = e.GetMultipleFiles(1).FirstOrDefault();
    }

    protected string GetFileName() =>
        $"TimeReg.{DateTime.Now:d}.json";
}
